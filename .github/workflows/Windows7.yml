name: Windows7

on:
  repository_dispatch:
    types: [win7-start, retry-win7-start]
    
  workflow_dispatch:
    inputs:
      tmate:
        description: "开启ssh调试"
        default: "false"

jobs:
  Windows7:
    runs-on: macos-12
    timeout-minutes: 600

    steps:
      - name: Check Image Version
        run: |
          version=$(grep -oE 'Image Version: ([0-9]{8}\.[0-9])' ~/systeminfo.md | awk '{print $3}')
          required_version="20240119.1"

          if [[ $version == $required_version || $version > $required_version ]]; then
            echo "Image Version 大于等于 ${required_version}，可以正常工作"
          else
            echo "Image Version 小于 ${required_version}，退出工作流，发出retry-workflow事件重试。"
            exit 1
          fi

      - name: Rerun workflow
        if: failure()
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: ${{ github.repository }}
          event-type: retry-win7-start

      - uses: actions/checkout@v4
      
      - name: Install Vagrant 2.3.6
        run: |
          pwd
      
      - name: Setup tmate session5
        if: ${{ !contains(inputs.tmate, 'false') }}
        uses: mxschmitt/action-tmate@v3
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
      
      - name: Wait for stop.txt
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
        run: |
          until [ -f stop.txt ]; do
            sleep 10
          done
          echo "File stop.txt is now available"
      
      - name: Wait for stop.txt
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
        run: |
          until [ -f stop.txt ]; do
            sleep 10
          done
          echo "File stop.txt is now available"
      
      - name: Wait for stop.txt
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
        run: |
          until [ -f stop.txt ]; do
            sleep 10
          done
          echo "File stop.txt is now available"
      
      - name: Wait for stop.txt
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
        run: |
          until [ -f stop.txt ]; do
            sleep 10
          done
          echo "File stop.txt is now available"
      
      - name: Wait for stop.txt
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
        run: |
          until [ -f stop.txt ]; do
            sleep 10
          done
          echo "File stop.txt is now available"
      
      - name: Wait for stop.txt
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
        run: |
          until [ -f stop.txt ]; do
            sleep 10
          done
          echo "File stop.txt is now available"
      
      - name: Wait for stop.txt
        continue-on-error: true
        timeout-minutes: 30  # 设置超时时间为30分钟
        run: |
          until [ -f stop.txt ]; do
            sleep 10
          done
          echo "File stop.txt is now available"

      - name: Install Vagrant 2.3.6
        run: |
          brew uninstall vagrant
          wget https://releases.hashicorp.com/vagrant/2.3.6/vagrant_2.3.6_darwin_amd64.dmg
          hdiutil attach vagrant_2.3.6_darwin_amd64.dmg
          sudo installer -pkg /Volumes/Vagrant/vagrant.pkg -target /
          hdiutil detach /Volumes/Vagrant/
          vagrant --version

      # - name: Cache Vagrant boxes
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.vagrant.d/boxes
      #     key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
      #     restore-keys: |
      #       ${{ runner.os }}-vagrant-

      - name: Show Vagrant version
        run: vagrant --version

      - name: 下载安装包
        run: |
          wget https://dev.thinkoncloud.cn/downloads/win7_app_zh/HuaYoungApp_Win7_dev_zh_setup.exe -O installer.exe

      - name: Copy files to Win7
        run: |
          find . -type f -not -path "*/\.*" -not -path "./win7/*" -exec rsync --relative {} ./win7/ \;

      - name: Run vagrant up
        run: vagrant up || true

      - name: 等待测试完成
        run: |
          while ! inotifywait -e create win7/done.log; do echo "等待文件 win7/done.log 出现..."; done; echo "文件 win7/done.log 已经出现"
          cat win7/done.log
          cat win7/start.log
          echo "测试结束"

      # - name: action-debug
      #   uses: fawazahmed0/action-debug@main

