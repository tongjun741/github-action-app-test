name: macOS

on:
  repository_dispatch:
    types: [macOS-start]
    
  workflow_dispatch:
    inputs:
      software_download_url:
        description: 'Download url'
        required: true
        default: 'https://dl.szdamai.com/downloads/mac_arm64_app_zh/HuaYoungApp_Mac_arm64_10.0.559_zh_setup.dmg'
      in_dev:
        description: '是否是测试环境'
        default: 'false'
      runs_on:
        description: 'macos-latest(arm64)还是macos-12(x64)'
        default: 'macos-latest'

jobs:

  macOS:
    runs-on: ${{ github.event.inputs.runs_on }}

    steps:

      # - name: Intentionally Fail
      #   run: exit 1  # 此处退出状态为1，表示故意失败

      - name: Check if running on M1 chip # github Action的macOS机器似乎都是M1芯片
        run: |
          if [[ "$(sysctl -n machdep.cpu.brand_string)" == *"Apple"* ]]; then
            echo "Running on an Apple Silicon (M1) chip"
          else
            echo "Running on an Intel chip"
          fi

      - uses: actions/checkout@v4
      
      - name: 下载并安装客户端
        run: |
          if [ -z "${{ inputs.software_download_url }}" ]; then
            download_url="https://dl.szdamai.com/downloads/mac_arm64_app_zh/HuaYoungApp_Mac_arm64_10.0.559_zh_setup.dmg"
          else
            download_url="${{ inputs.software_download_url }}"
          fi
          curl -o /tmp/HuaYoungApp_Mac_setup.dmg $download_url

          # 提取链接中的文件名部分
          filename=$(basename $download_url)

          # 使用正则表达式提取版本号
          version=""
          if [[ $filename =~ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
              version=${BASH_REMATCH[0]}
              echo "版本号: $version"
          else
              echo "无法解析版本号"
          fi
          
          appDir="/Volumes/花漾客户端 ${version}/"
          if [[ "$(sysctl -n machdep.cpu.brand_string)" == *"Apple"* ]]; then
            echo "M1芯片下appPath不一样"
            appDir="/Volumes/花漾客户端 ${version}-arm64/"
          fi

          echo "appDir: $appDir"

          hdiutil attach /tmp/HuaYoungApp_Mac_setup.dmg
          sudo cp -R "${appDir}花漾客户端.app" /Applications/
          hdiutil detach "${appDir}"
          if [ -f "/Applications/花漾客户端.app/Contents/Resources/app.asar" ]; then
            sudo chmod -f a+w /Applications/花漾客户端.app/Contents/Resources/app.asar
          fi

      # - name: Start software
      #   run: |
      #     open /Applications/花漾客户端.app

      - name: 准备chromedriver
        run: |
          if [[ "$(sysctl -n machdep.cpu.brand_string)" == *"Apple"* ]]; then
            echo "M1芯片下chromedirver路径是：/tmp/chromedriver/mac_arm-108/chromedriver-mac-arm64/chromedriver"
            wget https://chromedriver.storage.googleapis.com/108.0.5359.22/chromedriver_mac_arm64.zip
            unzip chromedriver_mac_arm64.zip
            mkdir -p /tmp/chromedriver/mac_arm-108/chromedriver-mac-arm64/
            mv chromedriver /tmp/chromedriver/mac_arm-108/chromedriver-mac-arm64/
          else
            echo "Intel芯片下chromedirver路径是：/tmp/chromedriver/mac-108/chromedriver-mac-x64/chromedriver"
            wget https://chromedriver.storage.googleapis.com/108.0.5359.22/chromedriver_mac64.zip
            unzip chromedriver_mac64.zip
            mkdir -p /tmp/chromedriver/mac-108/chromedriver-mac-x64/
            mv chromedriver /tmp/chromedriver/mac-108/chromedriver-mac-x64/
          fi

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          #cache: 'yarn'
          
      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: 自动创建工作目录
        run: |
          mkdir -p ~/Library/Application\ Support/HuaYoung

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: E2E Test for Electron 🧪
        env:
          DEV_WDIO_PASSWORD: ${{ secrets.DEV_WDIO_PASSWORD }}
          PRODUCT_WDIO_PASSWORD: ${{ secrets.PRODUCT_WDIO_PASSWORD }}
          DOWNLOAD_URL: ${{ github.event.inputs.software_download_url }}
          IN_DEV: ${{ github.event.inputs.in_dev }}
          FEISHU_TOKEN: ${{ secrets.FEISHU_TOKEN }}
          FEISHU_ME: ${{ secrets.FEISHU_ME }}
          LOGGER_SERVER: ${{ secrets.LOGGER_SERVER }}
          TRANSITER_SH_SERVER: ${{ secrets.TRANSITER_SH_SERVER }}
        run: sudo node modifyMain.js && yarn wdio