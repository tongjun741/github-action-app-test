name: Windows7-docker

on:
  workflow_dispatch:
    inputs:
      software_download_url:
        description: 'Download url'
        required: true
        default: 'https://dl.szdamai.com/downloads/win7_app_zh/HuaYoungApp_Win7_10.2.563_zh_setup.exe'
      in_dev:
        description: '是否是测试环境'
        default: 'false'
      tmate:
        description: '是否开启ssh调试'
        default: 'false'

jobs:
  Windows7:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        
      - name: 启动docker
        run: |
          cd win7
          docker compose up -d

      - name: 保存密码
        env:
          DEV_WDIO_PASSWORD: ${{ secrets.DEV_WDIO_PASSWORD }}
          PRODUCT_WDIO_PASSWORD: ${{ secrets.PRODUCT_WDIO_PASSWORD }}
          IN_DEV: ${{ github.event.inputs.in_dev }}
          FEISHU_TOKEN: ${{ secrets.FEISHU_TOKEN }}
          FEISHU_ME: ${{ secrets.FEISHU_ME }}
          LOGGER_SERVER: ${{ secrets.LOGGER_SERVER }}
          TRANSITER_SH_SERVER: ${{ secrets.TRANSITER_SH_SERVER }}
          DOWNLOAD_URL: ${{ github.event.inputs.software_download_url }}
        run: |
          echo '{
            "E2E_PLATFORM": "'"Windows 7"'",
            "DEV_WDIO_PASSWORD": "'"${DEV_WDIO_PASSWORD}"'",
            "PRODUCT_WDIO_PASSWORD": "'"${PRODUCT_WDIO_PASSWORD}"'",
            "IN_DEV": "'"${IN_DEV}"'",
            "FEISHU_TOKEN": "'"${FEISHU_TOKEN}"'",
            "FEISHU_ME": "'"${FEISHU_ME}"'",
            "LOGGER_SERVER": "'"${LOGGER_SERVER}"'",
            "TRANSITER_SH_SERVER": "'"${TRANSITER_SH_SERVER}"'",
            "DOWNLOAD_URL": "'"${DOWNLOAD_URL}"'"
          }' > passwd.json
      
      - name: 下载客户端
        run: |
          if [ -z "${{ inputs.software_download_url }}" ]; then
            download_url="https://dl.szdamai.com/downloads/win7_app_zh/HuaYoungApp_Win7_10.2.563_zh_setup.exe"
          else
            download_url="${{ inputs.software_download_url }}"
          fi
          curl -o installer.exe $download_url

      - name: Copy files to Win7
        run: |
          find . -type f -not -path "*/\.*" -not -path "./win7/*" -exec rsync --relative {} ./win7/shared/work \;
        
      - name: 复制相关文件到虚拟机共享目录
        run: |
          cd tools
          unzip node-v18.20.3-win-x64.zip
          cd ../win7
          cp ../tools/Windows6.1-KB3080149-x64.msu ./shared
          cp ../installer.exe ./shared/work
          cp ../tools/chromedriver_108.0.5359.71_win32.exe ./shared/work/chromedriver.exe
          cp ../passwd.json ./shared/work
          cp -r ../node-v18.20.3-win-x64 ./shared/node

      - name: 启动frpc
        run: |
          sed -i "s/user = .*/user = ${{ secrets.FRPC_USER }}/g" win7/frpc_16020852.ini
          sed -i "s/remote_port = .*/remote_port = ${{ secrets.FRPC_WIN7_REMOTE_PORT }}/g" win7/frpc_16020852.ini
          curl -Lo frpc https://nya.globalslb.net/natfrp/client/frpc/0.51.0-sakura-5.1/frpc_linux_amd64
          chmod +x frpc
          ./frpc -c ./win7/frpc_16020852.ini > /tmp/frpc.log 2>&1 &

      - name: 等待测试开始
        run: |
          while [ ! -f "win7/shared/start.log" ]; do
              sleep 10
          done
          
      - name: Setup tmate session5
        if: ${{ !contains(inputs.tmate, 'false') }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 25
        continue-on-error: true
        
      - name: 等待测试完成
        timeout-minutes: 15
        env:
          TRANSITER_SH_SERVER: ${{ secrets.TRANSITER_SH_SERVER }}
        run: |
          while [ ! -f "win7/shared/done.log" ]; do
              sleep 60
              curl --upload-file win7/shared/start.log ${TRANSITER_SH_SERVER}/hello.log
              cat win7/shared/start.log
          done
          echo "File win7/shared/done.log found!"
          cat win7/shared/start.log
          cat win7/shared/done.log
          echo "测试结束"

      - name: Save Logs
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: win7/shared/start.log

