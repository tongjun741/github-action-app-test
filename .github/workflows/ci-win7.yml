name: Win7自动测试

# https://github.com/actions/runner-images/issues/8730
# macos-12 20240105.3 才能正常跑
# macos-12 20240105.1   也启动不了win7
# 最新的macos-12 20240119.1 无法启动
# https://github.com/actions/runner-images/releases/tag/macOS-12%2F20240105.3
# 更新进度: https://github.com/actions/runner-images

on:
  push:
    paths:
      - .github/workflows/ci-win7.yml
      - Vagrantfile
      - win7.bat

  repository_dispatch:
    types: [retry-workflow]

jobs:
  vagrant-up:
    runs-on: macos-12

    steps:
      - name: Check Image Version
        run: |
          grep "Image Version" ~/systeminfo.md
          if grep -q "20240119.1" ~/systeminfo.md; then
            echo "Image Version 正确"
          else
            echo "Image Version 不是20240119.1，退出工作流。"
            exit 1
          fi

      - name: Rerun workflow
        if: failure()
        uses: peter-evans/repository-dispatch@v2
        with:
          repository: ${{ github.repository }}
          event-type: retry-workflow
      
      # - name: Setup tmate session5
      #   uses: mxschmitt/action-tmate@v3

      - uses: actions/checkout@v4

      - name: 下载安装包
        run: |
          wget https://dl.szdamai.com/downloads/win7_app_zh/HuaYoungApp_Win7_8.2.456_zh_setup.exe -O win7/your_software_installer.exe

      - name: 下载chromedriver
        run: |
          wget https://chromedriver.storage.googleapis.com/108.0.5359.71/chromedriver_win32.zip -O win7/chromedriver_win32.zip

      - name: 下载补丁文件
        run: |
          wget https://download.microsoft.com/download/4/E/8/4E864B31-7756-4639-8716-0379F6435016/Windows6.1-KB3080149-x64.msu -O win7/kb3080149.msu

      - name: 下载NodeJS 18
        run: |
          wget https://nodejs.org/dist/latest-v18.x/node-v18.19.0-win-x64.zip -O node-v18.19.0-win-x64.zip

      - name: Copy files to Win7
        run: |
          find . -type f -not -path "*/\.*" -not -path "./win7/*" -exec cp {} ./win7/{} \;

      # - name: Install Vagrant 2.3.6
      #   run: |
      #     brew uninstall vagrant
      #     wget https://releases.hashicorp.com/vagrant/2.3.6/vagrant_2.3.6_darwin_amd64.dmg
      #     hdiutil attach vagrant_2.3.6_darwin_amd64.dmg
      #     sudo installer -pkg /Volumes/Vagrant/vagrant.pkg -target /
      #     hdiutil detach /Volumes/Vagrant/
      #     vagrant --version

      # - name: Cache Vagrant boxes
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.vagrant.d/boxes
      #     key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
      #     restore-keys: |
      #       ${{ runner.os }}-vagrant-

      - name: Show Vagrant version
        run: vagrant --version

      - name: Run vagrant up
        run: vagrant up

        
        
      - name: action-debug
        uses: fawazahmed0/action-debug@main

      - name: ifconfig
        run: vagrant powershell -c ipconfig

      - name: 检查是否安装了补丁
        run: vagrant powershell -c 'if (Get-HotFix | Where-Object {$_.HotFixID -eq "KB3080149"}) { Write-Host "已安装 KB3080149" } else { Write-Host "未安装 KB3080149" }'

      - name: 激活
        run: vagrant powershell -c "C:\vagrant\activeWindows7.ps1"

      - name: 安装补丁
        run: vagrant powershell -c "C:\vagrant\installKB3080149.ps1"

      - name: 等待补丁安装完成
        run: vagrant powershell -c 'while (-not (Get-Process -Name "TrustedInstaller" -ErrorAction SilentlyContinue)) { Start-Sleep -Milliseconds 500 }; while ((Get-Process -Name "TrustedInstaller" -ErrorAction SilentlyContinue)) { Start-Sleep -Milliseconds 500 }'

      - name: 检查安装补丁进程
        run: vagrant powershell -c 'if ($processes = Get-Process | Where-Object {$_.ProcessName -like "*install*"}) { Write-Host "已发现以下进程：" ; $processes | Format-Table -AutoSize } else { Write-Host "未发现任何带有 'install' 子字符串的进程。" }'

      - name: 重启Box
        run: vagrant reload

      - name: 重启Box
        run: vagrant powershell -c "Restart-Computer"

      - name: 检查是否安装了补丁
        run: vagrant powershell -c 'if (Get-HotFix | Where-Object {$_.HotFixID -eq "KB3080149"}) { Write-Host "已安装 KB3080149" } else { Write-Host "未安装 KB3080149" }'

      - name: 安装NodeJs 18
        run: vagrant powershell -c "C:\vagrant\installNode.ps1"

      # - name: Setup tmate session5
      #   uses: mxschmitt/action-tmate@v3
      
      - name: action-debug
        uses: fawazahmed0/action-debug@main

      - name: 当前所在位置
        run: vagrant powershell -c "pwd"

      - name: Node版本
        run: vagrant powershell -c "node -v"

      - name: 当前目录文件列表
        run: vagrant powershell -c "dir"

      - name: 上级目录文件列表
        run: vagrant powershell -c "dir ../"

      - name: 执行测试
        run: vagrant powershell -c 'C:\vagrant\doTest.ps1'
